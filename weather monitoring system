import requests

class WeatherMonitor:
    def __init__(self, api_key):
        self.api_key = api_key
        self.base_url = "http://api.openweathermap.org/data/2.5/weather"

    def get_weather_data(self, location):
        """
        Fetch weather data for the specified location using OpenWeatherMap API.

        Args:
            location (str): City name or coordinates.

        Returns:
            dict: Parsed weather information including temperature, weather conditions, humidity, and wind speed.
        """
        url = f"{self.base_url}?q={location}&appid={self.api_key}&units=metric"
        
        try:
            response = requests.get(url)
            response.raise_for_status()
            data = response.json()
            
            weather_info = {
                'temperature': data['main']['temp'],
                'weather': data['weather'][0]['description'],
                'humidity': data['main']['humidity'],
                'wind_speed': data['wind']['speed']
            }
            
            return weather_info
        
        except requests.exceptions.RequestException as e:
            print(f"Error fetching data: {e}")
            return None

    def display_weather_data(self, weather_data):
        """
        Display the weather information.

        Args:
            weather_data (dict): Weather information to display.
        """
        print(f"Temperature: {weather_data['temperature']}Â°C")
        print(f"Weather: {weather_data['weather']}")
        print(f"Humidity: {weather_data['humidity']}%")
        print(f"Wind Speed: {weather_data['wind_speed']} m/s")

def main():
    api_key = " " #api key 
    monitor = WeatherMonitor(api_key)
    
    location = input("Enter location (city name or coordinates): ")
    weather_data = monitor.get_weather_data(location)
    
    if weather_data:
        monitor.display_weather_data(weather_data)
    else:
        print("Unable to fetch weather data")

if __name__ == "__main__":
    main()
