import requests

# Constants
API_KEY = 'gAU1xcKnKXNLGXbHql7PDa0N9WUME5rv80Â°12'  # Replace with your TomTom API key
BASE_URL = 'https://api.tomtom.com/routing/1/calculateRoute'

def fetch_traffic_data(start_lat, start_lon, end_lat, end_lon):
    params = {
        'key': API_KEY,
        'format': 'json',
        'travelMode': 'car',
        'traffic': 'true',
        'routeType': 'fastest',
        'startPoint': f'{start_lat},{start_lon}',
        'endPoint': f'{end_lat},{end_lon}'
    }
    response = requests.get(BASE_URL, params=params)
    if response.status_code == 200:
        return response.json()
    else:
        raise Exception("Error fetching data from TomTom API")

def display_traffic_info(data):
    try:
        route = data['routes'][0]
        summary = route['summary']

        # Display current traffic conditions
        print(f"Start Point: {summary['startPoint']}")
        print(f"End Point: {summary['endPoint']}")
        print(f"Estimated Travel Time: {summary['travelTimeInSeconds'] / 60:.2f} minutes")
        print(f"Distance: {summary['lengthInMeters'] / 1000:.2f} km")

        # Display any incidents or delays
        incidents = route.get('incidents', [])
        if incidents:
            print("Traffic Incidents:")
            for incident in incidents:
                print(f"- {incident['type']} at {incident['position']['lat']}, {incident['position']['lon']}")
        else:
            print("No traffic incidents reported.")

        # Display alternative routes if available
        if len(data['routes']) > 1:
            print("Alternative Routes:")
            for idx, route in enumerate(data['routes']):
                print(f"Route {idx+1}: {route['summary']['lengthInMeters'] / 1000:.2f} km, "
                      f"Travel Time: {route['summary']['travelTimeInSeconds'] / 60:.2f} minutes")
        else:
            print("No alternative routes available.")

    except (IndexError, KeyError) as e:
        print("Error parsing traffic data:", e)

def main():
    start_lat = input("Enter the starting latitude: ")
    start_lon = input("Enter the starting longitude: ")
    end_lat = input("Enter the destination latitude: ")
    end_lon = input("Enter the destination longitude: ")

    try:
        traffic_data = fetch_traffic_data(start_lat, start_lon, end_lat, end_lon)
        display_traffic_info(traffic_data)
    except Exception as e:
        print(e)

if __name__ == "__main__":
    main()
